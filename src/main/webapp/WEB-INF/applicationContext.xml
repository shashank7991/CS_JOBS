<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:security="http://www.springframework.org/schema/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-4.1.xsd
        http://www.springframework.org/schema/security
        http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource"
		destroy-method="close">
		<property name="driverClassName" value="org.postgresql.Driver" />
		<property name="url" value="jdbc:postgresql://localhost:5432/csjobs" />
		<property name="username" value="csjobs" />
		<property name="password" value="abcd" />
		<property name="initialSize" value="1" />
	</bean>

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceUnitName" value="csjobs" />
		<property name="dataSource" ref="dataSource" />
	</bean>

	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory" />
	</bean>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

	<context:annotation-config />

	<tx:annotation-driven />


	<security:authentication-manager>
		<security:authentication-provider>
			<security:jdbc-user-service
				data-source-ref="dataSource"
				users-by-username-query="select email as username,password,true from users where email=?"
				authorities-by-username-query="select u.email as username,a.role from users u left join authorities a on u.id=a.user_id where email=?" />
		</security:authentication-provider>
	</security:authentication-manager>


	<security:http auto-config="true" use-expressions="true">
		<security:form-login login-page="/login.html"
			default-target-url="/userverify.html" authentication-failure-url="/error.html"
			username-parameter="username" password-parameter="password" />

		<security:logout logout-success-url="/" />
		<security:csrf />

		<!-- Anonymous -->
		<security:intercept-url pattern="/job/list.html"
			access="permitAll" />
		<security:intercept-url pattern="/job/view.html"
			access="permitAll" />


		<!-- Admin -->
		<security:intercept-url pattern="/admin.html"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin/details.html"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin/listofuser.html"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/job/viewjob.html"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin/joblist.html"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/job/add.html"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/job/edit.html"
			access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="/admin/viewjob.html"
			access="hasRole('ROLE_ADMIN')" />


		<!-- Reviewer -->
		<security:intercept-url pattern="/reviewer.html"
			access="hasRole('ROLE_REVIEWER')" />
		<security:intercept-url pattern="/reviewer/viewjob.html"
			access="hasRole('ROLE_REVIEWER')" />
		<security:intercept-url pattern="/reviewer/listofuser.html"
			access="hasRole('ROLE_REVIEWER')" />
		<security:intercept-url pattern="/reviewer/details.html"
			access="hasRole('ROLE_REVIEWER')" />


		<!-- Applicant -->
		<security:intercept-url pattern="/applicant.html"
			access="authenticated" />
		<security:intercept-url pattern="/addDegree.html"
			access="authenticated" />
		<security:intercept-url pattern="/application/apply.html"
			access="authenticated" />
		<security:intercept-url pattern="/application/upload.html"
			access="authenticated" />
		<security:intercept-url pattern="/application/view.html"
			access="authenticated" />

	</security:http>

	<context:component-scan base-package="csjobs.model" />
	<context:component-scan base-package="csjobs.web.security" />
	<security:global-method-security
		pre-post-annotations="enabled" />


</beans>


<!-- <?xml version="1.0" encoding="UTF-8"?> <beans xmlns="http://www.springframework.org/schema/beans" 
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" 
	xmlns:security="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd 
	http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd 
	http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd 
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd"> 
	<bean id="dataSource" class="org.apache.tomcat.jdbc.pool.DataSource" destroy-method="close"> 
	<property name="driverClassName" value="org.postgresql.Driver" /> <property 
	name="url" value="jdbc:postgresql://localhost:5432/csjobs" /> <property name="username" 
	value="csjobs" /> <property name="password" value="abcd" /> <property name="initialSize" 
	value="1" /> </bean> <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean"> 
	<property name="persistenceUnitName" value="csjobs" /> <property name="dataSource" 
	ref="dataSource" /> </bean> <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager"> 
	<property name="entityManagerFactory" ref="entityManagerFactory" /> </bean> 
	<bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" 
	/> <context:annotation-config /> <tx:annotation-driven /> <security:authentication-manager> 
	<security:authentication-provider user-service-ref="userService"> </security:authentication-provider> 
	</security:authentication-manager> <bean id="authentication" class="csjobs.web.security.AuthenticationSuccessHandler"></bean> 
	<security:http auto-config="true" use-expressions="true"> <security:intercept-url 
	pattern="/admin.html" access="hasRole('ROLE_ADMIN')" /> <security:intercept-url 
	pattern="/reviewer.html" access="hasRole('ROLE_REVIEWER')" /> <security:form-login 
	login-page = "/login.html" authentication-success-handler-ref="authentication"></security:form-login> 
	</security:http> <context:component-scan base-package="csjobs.model" /> <context:component-scan 
	base-package="csjobs.web.security" /> </beans> -->
















